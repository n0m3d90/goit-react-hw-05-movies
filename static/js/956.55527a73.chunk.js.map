{"version":3,"file":"static/js/956.55527a73.chunk.js","mappings":"mMACA,MAAMA,EAAU,mCAEhBC,EAAAA,EAAMC,SAASC,QAAU,gCAElB,MAAMC,EAAcC,gBACFJ,EAAAA,EAAMK,IAAK,8BAA6BN,MAC/CO,KAGLC,EAAeH,gBACHJ,EAAAA,EAAMK,IAC1B,wBAAuBN,0BAAgCS,iCAE1CF,KAGLG,EAAkBL,gBACNJ,EAAAA,EAAMK,IAC1B,SAAQK,aAAcX,qBAETO,KAGLK,EAAkBP,gBACNJ,EAAAA,EAAMK,IAC1B,SAAQK,qBAAsBX,qBAEjBO,KAGLM,EAAaR,gBACDJ,EAAAA,EAAMK,IAC1B,SAAQK,qBAAsBX,4BAEjBO,I,qFCjCX,MAAMO,EAAWC,EAAAA,GAAOC,EAAG;;EAGrBC,EAAWF,EAAAA,GAAOG,EAAG;;;;EAKrBC,EAAOJ,EAAAA,GAAOK,EAAG;;EAGjBC,EAAYN,EAAAA,GAAOO,CAAE;;eCRlC,MA+BA,EA/BaC,KACX,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KACnC,QAAEC,IAAYC,EAAAA,EAAAA,KAIpB,OAHAC,EAAAA,EAAAA,YAAU,MACRjB,EAAAA,EAAAA,IAAgBe,GAASG,MAAKvB,GAAQkB,EAAYlB,EAAKwB,OAAM,GAC5D,CAACJ,KAEFK,EAAAA,EAAAA,KAAClB,EAAQ,CAAAmB,SACNT,EAASU,OAAS,EACfV,EAASW,KAAIC,IAAA,IAAC,GAAEzB,EAAE,KAAE0B,EAAI,aAAEC,EAAY,UAAEC,GAAWH,EAAA,OACjDI,EAAAA,EAAAA,MAACvB,EAAQ,CAAAgB,SAAA,EACPD,EAAAA,EAAAA,KAAA,OACES,IACEH,EACK,kCAAiCA,IACjC,+CAEPI,IAAI,QACJC,QAAQ,OACRC,MAAO,IACPC,OAAQ,OAEVb,EAAAA,EAAAA,KAACb,EAAI,CAAAc,SAAEI,KACPG,EAAAA,EAAAA,MAACnB,EAAS,CAAAY,SAAA,CAAC,eAAaM,OAbX5B,EAcJ,IAEb,kCACK,C","sources":["Api/apiService.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'af0d5f243de6f7a5bfa482911cb42a9e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n`;\nexport const CastItem = styled.li`\n  margin: 10px 0 16px;\n  padding: 2px 8px;\n  //box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n`;\nexport const Name = styled.h3`\n  margin: 8px 0;\n`;\nexport const Character = styled.p`\n  margin: 0;\n`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../Api/apiService';\nimport { CastItem, CastList, Character, Name } from './Cast.styled';\n\nconst Cast = () => {\n  const [castList, setCastList] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCredits(movieId).then(data => setCastList(data.cast));\n  }, [movieId]);\n  return (\n    <CastList>\n      {castList.length > 0\n        ? castList.map(({ id, name, profile_path, character }) => (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : `http://www.suryalaya.org/images/no_image.jpg`\n                }\n                alt=\"actor\"\n                loading=\"lazy\"\n                width={120}\n                height={180}\n              />\n              <Name>{name}</Name>\n              <Character> Character: {character}</Character>\n            </CastItem>\n          ))\n        : \"Sorry, there isn't any info :(\"}\n    </CastList>\n  );\n};\n\nexport default Cast;"],"names":["API_KEY","axios","defaults","baseURL","getTrending","async","get","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","CastList","styled","ul","CastItem","li","Name","h3","Character","p","Cast","castList","setCastList","useState","movieId","useParams","useEffect","then","cast","_jsx","children","length","map","_ref","name","profile_path","character","_jsxs","src","alt","loading","width","height"],"sourceRoot":""}