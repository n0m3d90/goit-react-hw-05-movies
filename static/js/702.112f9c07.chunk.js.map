{"version":3,"file":"static/js/702.112f9c07.chunk.js","mappings":"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","sources":["Api/apiService.js","Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'af0d5f243de6f7a5bfa482911cb42a9e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  margin: 0;\n`;\nexport const MovieBox = styled.div`\n  display: flex;\n  padding: 20px;\n  border-bottom: solid 1px grey;\n`;\nexport const MovieInfo = styled.div`\n  padding: 20px 40px;\n`;\nexport const GenresList = styled.ul`\n  list-style: none;\n  display: flex;\n  padding: 0;\n  gap: 16px;\n`;\nexport const Button = styled.button`\n  margin-top: 16px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: none;\n  margin-bottom: 10px;\n  font-weight: 500;\n  &:hover {\n    background-color: #63c5da;\n  }\n`;\n\nexport const LinkBack = styled(Link)`\n  display: flex;\n  font-size: 14px;\n  align-items: center;\n  column-gap: 10px;\n`;\nexport const InfoBox = styled.div`\n  padding: 20px;\n  border-bottom: solid 1px grey;\n`;","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from '../../Api/apiService';\nimport { useState, useEffect } from 'react';\nimport {\n  Button,\n  GenresList,\n  InfoBox,\n  LinkBack,\n  MovieBox,\n  MovieInfo,\n  Title,\n} from './MovieDetails.styled';\n\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\n\nconst MovieDetails = () => {\n  const [movieDetail, setMovieDetail] = useState({});\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(data => setMovieDetail(data));\n  }, [movieId]);\n\n  const { original_title, overview, genres, poster_path, vote_average } =\n    movieDetail;\n  const score = vote_average * 10;\n  const scoreToFixed = score.toFixed(2);\n  return (\n    <main>\n      <Button type=\"button\">\n        <LinkBack to={location.state?.from ?? '/'}>\n          <HiArrowNarrowLeft size={16} />\n          Go back\n        </LinkBack>\n      </Button>\n      <MovieBox>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : `http://www.suryalaya.org/images/no_image.jpg`\n          }\n          width={320}\n          height={380}\n          loading=\"lazy\"\n          alt=\"poster\"\n        />\n        <MovieInfo>\n          <Title>{original_title}</Title>\n          <h3>User score: {scoreToFixed}%</h3>\n          <h3>Overview</h3>\n          <p>{overview} </p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres &&\n              genres.length &&\n              genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n          </GenresList>\n        </MovieInfo>\n      </MovieBox>\n      <InfoBox>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ ...location.state }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            {' '}\n            <Link to=\"reviews\" state={{ ...location.state }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </InfoBox>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;"],"names":["API_KEY","axios","defaults","baseURL","getTrending","async","get","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","Title","styled","h2","MovieBox","div","MovieInfo","GenresList","ul","Button","button","LinkBack","Link","InfoBox","MovieDetails","_location$state$from","_location$state","movieDetail","setMovieDetail","useState","location","useLocation","movieId","useParams","useEffect","then","original_title","overview","genres","poster_path","vote_average","scoreToFixed","toFixed","_jsxs","children","_jsx","type","to","state","from","HiArrowNarrowLeft","size","src","width","height","loading","alt","length","map","_ref","name","Outlet"],"sourceRoot":""}